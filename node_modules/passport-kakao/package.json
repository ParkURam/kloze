{
  "name": "passport-kakao",
  "version": "0.0.2",
  "description": "kakao oauth2 login module",
  "main": "./lib/passport-kakao",
  "keywords": [
    "passport",
    "kakao",
    "kakaotalk",
    "oauth2"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/rotoshine/passport-kakao.git"
  },
  "author": {
    "name": "rotoshine@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "pkginfo": "~0.3.0",
    "passport-oauth2": "~1.1.2"
  },
  "readme": "# passport-kakao\nkakao oauth2 로그인과 passport 모듈 연결체.\n\n## install\n```sh\nnpm install passport-kakao\n```\n\n## how to use\n\n1. https://developers.kakao.com/ 에서 애플리케이션을 등록한다.\n2. 내 애플리케이션 - 설정 - 일반에서, 플랫폼 추가를 누른 후 웹 플랫폼을 추가한다.\n3. 웹 플랫폼 설정의 사이트 도메인에 자신의 사이트 도메인을 추가한다. (ex : http://localhost:3000)\n4. 프로그램 상에서는 아래와 같이 사용한다.\n\n```javascript\nvar passport = require('passport'),\n    KakaoStrategy = require('passport-kakao').Strategy;\n\npassport.use(new KakaoStrategy({    \n    clientID : clientID,\n    callbackURL : callbackURL\n  },\n  function(accessToken, refreshToken, profile, done){\n    // 사용자의 정보는 profile에 들어있다.\n    User.findOrCreate(..., function(err, user) {\n      if (err) { return done(err); }\n      done(null, user);\n    });\n  }\n));\n```\n> 현재 kakao에서 별도의 callbackURL 설정은 없고 사이트 도메인 등록만 있는데, 등록된 사이트 도메인/oauth 로만 호출을 허용하므로 callbackURL은 사이트 도메인/oauth 로 설정하는 것을 권장함. (ex : http://localhost:3000/oauth )\n\n\n## profile property\nprofile에는 아래의 property들이 설정되어 넘겨진다.\n\n| key   | value | 비고 |\n| ----- |-------| ---- |\n| provider | String | kakao 고정 |\n| id | Number | 사용자의 kakao id |\n| _row | String | 사용자 정보 조회로 얻어진 json string |\n| _json | Object | 사용자 정보 조회로 얻어진 json 원본 데이터 |\n\n## mean.io 와 쉽게 연동하기\n\n수정해야하는 파일들은 아래와 같다.\n\n| file path | 설명 |\n| ----------|-----|\n| server/config/env/development.js | 개발환경 설정파일 |\n| server/config/env/production.js | 운영환경 설정파일 |\n| server/config/models/user.js | 사용자 모델 |\n| server/config/passport.js | passport script |\n| server/routes/users.js | 사용자 로그인 관련 routes file |\n| public/auth/views/index.html | 로그인 화면 |\n\n(1) **mean.io app을 생성** 한다. (ex : mean init kakaoTest)\n\n(2) 해당 모듈을 연동할 mean.io app에 설치한다.(npm install passport-kakao --save)\n\n(3) **server/config/env/development.js** 와 **production.js** 에 kakao 관련 설정을 아래와 같이 추가한다.\n\n```javascript\n'use strict';\n\nmodule.exports = {\n    db: 'mongodb',\n    app: {\n        name: 'passport-kakao'\n    },\n    // 그외 설정들....,\n    kakao: {\n        clientID : 'kakao app rest api key',\n        callbackURL: 'http://localhost:3000/oauth'\n    }\n};\n```\n\n(4) **server/config/models/users.js** 의 사용자 스키마 정의에 **kakao: {}** 를 추가한다.\n\n(5) **server/config/passport.js** 파일에 아래 구문을 추가한다.\n\n```javascript\n// 최상단 require되는 구문에 추가\nvar KakaoStrategy = require('passport-kakao').Strategy;\n\npassport.use(new KakaoStrategy({\n        clientID: config.kakao.clientID,\n        callbackURL: config.kakao.callbackURL\n    }, function(accessToken, refreshToken, profile, done){\n        User.findOne({\n            'kakao.id' : profile.id\n        }, function(err, user){\n            if(err){\n                return done(err);\n            }\n            if(!user){\n                user = new User({\n                    name: profile.username,\n                    username: profile.id,\n                    roles : ['authenticated'],\n                    provider: 'kakao',\n                    kakao: profile._json\n                });\n\n                user.save(function(err){\n                    if(err){\n                        console.log(err);\n                    }\n                    return done(err, user);\n                });\n            }else{\n                return done(err, user);\n            }\n        });\n    }\n));\n```\n\n(6) **server/routes/users.js** 에 아래와 같은 구문을 추가한다.\n```javascript\napp.get('/auth/kakao', passport.authenticate('kakao',{\n    failureRedirect: '#!/login'\n}), users.signin);\n\napp.get('/oauth', passport.authenticate('kakao', {\n    failureRedirect: '#!/login'\n}), users.authCallback);\n```\n\n(7) **public/auth/views/index.html** 에 kakao login을 연결한다.\n```html\n<!-- 아래는 예시 -->\n<div>\n    <div class=\"row\">\n        <div class=\"col-md-offset-1 col-md-5\">\n            <a href=\"/auth/facebook\">\n                <img src=\"/public/auth/assets/img/icons/facebook.png\"/>\n            </a>\n            <a href=\"/auth/twitter\">\n                <img src=\"/public/auth/assets/img/icons/twitter.png\"/>\n            </a>\n\n            <!-- kakao login -->\n            <a href=\"/auth/kakao\">\n                카카오 로그인\n            </a>\n        </div>\n    </div>\n    <div class=\"col-md-6\">\n        <div ui-view></div>\n    </div>\n\n</div>\n```\n\n(8) grunt로 mean.io app 실행 후, 실제 로그인 연동 테스트를 해본다.\n\n## 기타\npassport-oauth 모듈과 passport-facebook 모듈을 참고함.\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rotoshine/passport-kakao/issues"
  },
  "homepage": "https://github.com/rotoshine/passport-kakao",
  "_id": "passport-kakao@0.0.2",
  "_from": "passport-kakao@*"
}
